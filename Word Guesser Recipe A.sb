' Word guessing game

' Presents a word to the user along with its definition and picture.
' The user tries to guess the word, asking for a hint if needed.
' The display uses a 6x3 cell grid. The definition is displayed in columns 1 and 2, the picture in columns 3 through 6.
' The definition columns have controls for guessing the word at the top and a help area at the bottom with buttons for getting hints and giving up.

InitializeGame()
PresentNewWord()

' Initializes the game.
' Plays an opening chime, sets up screen metrics, hooks up the button click event, and downloads the words.
Sub InitializeGame
  Sound.PlayChime()
  c = 200 ' the width of a cell
  margin = 20
  helpButtonTop = 3*c - 60 ' the Y position of the top of the buttons in the help area
  GraphicsWindow.Width = 6*c
  GraphicsWindow.Height = 3*c
  GraphicsWindow.Left = (Desktop.Width - GraphicsWindow.Width) / 2
  GraphicsWindow.Top = (Desktop.Height - GraphicsWindow.Height) / 3
  GraphicsWindow.Title = "Word Guesser"
  GraphicsWindow.FontBold = 0
  Controls.ButtonClicked = OnClick
  DownloadWords()
EndSub

' Downloads a file containing a list of words from the internet.
' Reads line numbers 1 through 1000, putting the word in each line into an array element whose index matches the line number.
' If there is no word on a line, stops reading the file.
Sub DownloadWords
  ' TODO CLASS2: Implement. Download the words from: https://gist.githubusercontent.com/breyed/54687bf9dcdcafe9ff27/raw/98a795f1d71bf6ab348e14b20247571589d63725/treasure-island-words
EndSub

' Presents a new word to the user along with its definition and picture.
' Also displays an input form for the user's guess.
Sub PresentNewWord
  GetWordAndDefinition()
  GraphicsWindow.Clear()
  DrawForm()
  DrawPicture()
  AnimateFireworks()
EndSub

' Randomly chooses a word from the list of words and gets its definition from the dictionary.
' Removes the definition's header and redacts any occurrences of the word.
' Also clears the hint.
Sub GetWordAndDefinition
  ' TODO CLASS1: Implement a placeholder.
  ' TODO CLASS2: Fully implement.
EndSub

' Removes the header from the definition.
' The header is the text up to and including the first blank line.
' Finds the first blank line by searching for two consecutive line ending marks (2 instances of CR/LF).
Sub RemoveDefinitionHeader
  ' TODO CLASS2: Implement.
EndSub

' Redacts occurrences of the word from the definition.
' Repeatedly searches through the definition for the word.
' Each time it finds a word, it replaces the definition with the text before the word,
' followed by four stars, followed by the text after the word.
Sub RedactWordFromDefinition
  ' TODO CLASS2 PAIR2: Implement.
EndSub

' Draws a form with the definition and controls for guessing, hints, getting new pictures, and getting a new word.
' Draws a text box for the guess and a Guess button at the top. Draws the definition underneath.
' Draws a help area at the bottom by first drawing a white rectangle to blank the space (in case the definition is long),
' and then drawing Get Hint, New Picture, and New Word buttons.
Sub DrawForm
  ' Adds the guess text box and button.
  ' TODO CLASS1: Implement. Put the guess button 175 pixels to the right of the left side of the text box. Put the definition 40 pixels below the top margin.

  ' Clears the help area.
  ' TODO PAIR1: Implement. Leave a margin above the top of the help buttons.
  
  ' Adds the help area buttons.
  ' TODO CLASS2: Implement Get Hint button. Place it at the left margin.
  ' TODO PAIR1: Implement New Picture button. Place the New Picture button .6*c in from the left margin.
  ' TODO CLASS1: Implement New Word button. Place the New Picture button 1.3*c in from the left margin.
EndSub

' Gets a random picture for the word from Flickr and draws it on the right side of the window.
Sub DrawPicture
  ' TODO CLASS1: Implement.
EndSub

' Handles button clicks.
Sub OnClick
  ' TODO CLASS1: Implement Guess button.
  ' TODO CLASS2: Implement Get Hint button.
  ' TODO PAIR1: Implement New Picture button.
  ' TODO CLASS1: Implement New Word button. Play a chime before presenting the new word.
EndSub

' Checks whether a guess at the word is correct.
' If the user entered the correct word, plays the bell and presents a new word.
' If incorrect, plays a "wrong answer" tone.
Sub CheckWordGuess
  ' TODO CLASS1: Implement. Use "O3 D8 O2 D2" for the wrong answer tone.
EndSub

' Animates three squares from the bottom-middle of the window to past the top at the left, middle, and right, respectively.
' Colors the squares green, blue, and red, from left to right. Rotates the blue square to look like a diamond.
' Makes each square semi-translucent.
Sub AnimateFireworks
  ' TODO CLASS2: Implement the green square. Make each side 50 pixels. Animate for 1 second.
  ' TODO PAIR2: Implement the blue and red squares.
EndSub

' Displays a hint about the word by showing the beginning letters under the control buttons.
' Initially, there is no hint. Each time the hint button is clicked, shows one additional letter.
' Only shows the first 3 letters, and never the entire word. After that, hides the button to get a hint.
' Before drawing the hint text, clears its space by filling a white rectangle.
Sub DisplayHint
  ' TODO CLASS2: Display the hint. Make the hint green and place the hint 34 pixels below the top of the help buttons.
  ' TODO PAIR2: Hide the hint button when appropriate.
EndSub